<?xml version="1.0" encoding="UTF-8" ?>
    <!DOCTYPE mapper
            PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
            "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- <mapper namespace="com.wj.entity.StudentMapper">
    　　id ="接口中的方法名"
　　parameterType="传入的参数类型"
　　resultType = "返回实体类对象，使用包.类名"-->

<mapper namespace="com.wj.mapper.StudentMapper">

    <select id="quarry" resultType="student">
          select * from student
        </select>

    <select id="quarrybyid" resultType="student" parameterType="int">
          select * from student where stuno=#{stuno}
        </select>

    <insert id="add" parameterType="student">
         insert into student(stuno,stuname,stuage,gradename) values (#{stuno},#{stuname},#{stuage},#{gradename})
       </insert>

    <update id="update" parameterType="Student">
        update student set stuname=#{stuname} where stuno=#{stuno}
    </update>

    <delete id="delete" parameterType="int">
        delete from student where stuno=#{stuno}
    </delete>

    <select id="quarrystubySQLtag" parameterType="student" resultType="student">
        select stuno,stuname from student
        <where>
            <if test="stuname!=null and stuname!=''">
                and stuname=#{stuname}
            </if>
            <if test="stuage!=null and stuage!=''">
                and stuname=#{stuname}
            </if>
        </where>
    </select>
    <!-- 在年级中查找所有学生的信息-->
    <select id="quarryStuWithStunosInGrade" parameterType="grade" resultType="student">
        select * from student
        <where>
              <if test="stuNos!=null and stuNos.size>0">
              <foreach collection="stuNos" open=" stuno in(" close=")" item="stuno" separator=",">
                ${stuno}
              </foreach>
              </if>
        </where>
    </select>

    <select id="quarryStudnetByNoWithObO" parameterType="int" resultMap="stu_stucard_map">
        select s.*,c.* from student s inner join stucard c on s.stucardid=c.stucardid where stuno=#{stuNo}
    </select>
    <resultMap id="stu_stucard_map" type="student">
        <!--学生的信息-->
        <!-- 注意property中的值要和类里面的属性严格对应，区分大小写   column中的值为数据库中的值，不区分大小写  -->
        <id property="stuno" column="stuno"/>
        <result property="stuname" column="stuname"/>
        <result property="stuage" column="stuage"/>
        <!--  一对一的时候用association  javaType指定该属性的类型-->
        <!--   一对多的时候用collection -->
        <association property="studentCard" javaType="StudentCard">
            <id property="stucardId" column="stucardid"/>
            <result property="stucardInfo" column="stucardinfo"/>
        </association>
    </resultMap>

    <select id="quarryStudentAndClass" parameterType="int" resultMap="stu_stuclass_map">
        select  s.*,c.* from student s inner join stuclass c
        on s.classid=c.classid
        where s.classId=#{classId}
    </select>
    <resultMap id="stu_stuclass_map" type="StudentClass">
    <!--主类为studentclass,所以先配置主类-->
        <id property="classId" column="classId"/>
        <result property="className" column="className"/>
        <!--  一对多使用collection    并且使用ofType-->
        <collection property="students" ofType="student">
            <id property="stuno" column="stuno"/>
            <result property="stuname" column="stuname"/>
            <result property="stuage" column="stuage"/>
        </collection>
    </resultMap>
</mapper>
